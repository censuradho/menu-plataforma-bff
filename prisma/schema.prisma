// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model StoreUser {
  id String @id
  firstName String @default("")
  lastName String @default("")
  phone String

  email String
  password String

  store Store?

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  @@map("users")
}

model StoreStaff  {
  id String @id

  fullName String
  email String
  password String

  storeId Int
  store Store @relation(fields: [storeId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  @@map("Storestaff")
}

model OperationMode {
  id Int @id @default(autoincrement())

  label String

  stores Store[]

  @@map("operationModes")
}

model Store {
  id Int @id @default(autoincrement())

  name String

  document String
  documentType String

  cuisineType String

  establishmentTime String


  revenueEstimate String

  numberOfEmployees Int @default(0)

  ownerId String @unique
  owner StoreUser @relation(fields: [ownerId], references: [id])

  staffs StoreStaff[]
  operationMode OperationMode[]

  menuGroups MenuGroup[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  
  @@map("stores")
}

model MenuGroup {
  id Int @id @default(autoincrement())

  label String

  visible Boolean @default(true)

  storeId Int
  store Store @relation(fields: [storeId], references: [id])
  menus Menu[]

  hourFrom String?
  hourTo String?

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  @@map("menuGroups")
}

model Menu {
  id Int @id @default(autoincrement())

  label String

  groupId Int
  group MenuGroup @relation(fields: [groupId], references: [id])

  products Product[]

  @@map("menus")
}

model Product {
  id Int @id @default(autoincrement())

  label String
  
  value String

  image String?

  visible Boolean @default(true)
  limitAge Boolean @default(false)

  customPrices ProductCustomPrice[]

  menuId Int
  menu Menu @relation(fields: [menuId], references: [id])

  @@map("products")
}

model ProductCustomPrice {
  id Int @id @default(autoincrement())

  value String
  code String
  active Boolean

  productId Int
  product Product @relation(fields: [productId], references: [id])

  @@map("productCustomPrice")
}